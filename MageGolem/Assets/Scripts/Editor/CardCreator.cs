using System;
using System.Linq;
using System.Reflection;
using CardScripts;
using CardScripts.Database;
using UnityEditor;
using UnityEngine;

namespace EditorScripts
{
    public class CardCreator : EditorWindow
    {
        [MenuItem("Assets/Create/Card")]
        public static void ShowWindow()
        {
            GetWindow<CardCreator>("Create Card");
        }

        private void OnGUI()
        {
            if(GUILayout.Button("Create New Card"))
            {
                CreateNewCard();
            }
            
            EditorGUILayout.HelpBox("Do not modify autogenerated IDs without very good reason - Disto", MessageType.Warning);
        }        

        void CreateNewCard()
        {
            var newCard = CreateInstance<Card>();
            newCard.name = "New Card";
            
            newCard.SetCardId(GetNextCardID()); 
            
            string folderPath = "Assets/Resources/Cards";
            
            if (!AssetDatabase.IsValidFolder(folderPath))
            {
                AssetDatabase.CreateFolder("Assets/Resources", "Cards");
            }
            
            string assetPath = $"{folderPath}/{newCard.name}.asset";
            
            AssetDatabase.CreateAsset(newCard, assetPath);
            AssetDatabase.SaveAssets();
            
            EditorUtility.FocusProjectWindow();
            Selection.activeObject = newCard;
        }

        int GetNextCardID()
        {
            var allCards = Resources.FindObjectsOfTypeAll<Card>();
            var maxID = allCards.Select(card => card.CardId).Prepend(-1).Max();

            return maxID + 1;
        }
    }
}